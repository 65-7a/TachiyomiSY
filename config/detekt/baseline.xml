<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>CommentWrapping:NetworkHelper.kt$NetworkHelper$/* SY &lt;-- */</ID>
    <ID>CyclomaticComplexMethod:ImageUtil.kt$ImageUtil$fun chooseBackground(context: Context, imageSource: BufferedSource): Drawable</ID>
    <ID>CyclomaticComplexMethod:RateLimitInterceptor.kt$RateLimitInterceptor$override fun intercept(chain: Interceptor.Chain): Response</ID>
    <ID>ForbiddenComment:Localize.kt$// TODO: janky workaround for https://github.com/icerockdev/moko-resources/issues/337</ID>
    <ID>FunctionNaming:Requests.kt$fun DELETE( url: String, headers: Headers = DEFAULT_HEADERS, body: RequestBody = DEFAULT_BODY, cache: CacheControl = DEFAULT_CACHE_CONTROL, ): Request</ID>
    <ID>FunctionNaming:Requests.kt$fun GET( url: HttpUrl, headers: Headers = DEFAULT_HEADERS, cache: CacheControl = DEFAULT_CACHE_CONTROL, ): Request</ID>
    <ID>FunctionNaming:Requests.kt$fun GET( url: String, headers: Headers = DEFAULT_HEADERS, cache: CacheControl = DEFAULT_CACHE_CONTROL, ): Request</ID>
    <ID>FunctionNaming:Requests.kt$fun PATCH( url: String, headers: Headers = DEFAULT_HEADERS, body: RequestBody = DEFAULT_BODY, cache: CacheControl = DEFAULT_CACHE_CONTROL, ): Request</ID>
    <ID>FunctionNaming:Requests.kt$fun POST( url: String, headers: Headers = DEFAULT_HEADERS, body: RequestBody = DEFAULT_BODY, cache: CacheControl = DEFAULT_CACHE_CONTROL, ): Request</ID>
    <ID>FunctionNaming:Requests.kt$fun PUT( url: String, headers: Headers = DEFAULT_HEADERS, body: RequestBody = DEFAULT_BODY, cache: CacheControl = DEFAULT_CACHE_CONTROL, ): Request</ID>
    <ID>FunctionParameterNaming:WebViewInterceptor.kt$_name: String</ID>
    <ID>FunctionParameterNaming:WebViewInterceptor.kt$_value: String</ID>
    <ID>InstanceOfCheckForException:RxCoroutineBridge.kt$e !is CancellationException</ID>
    <ID>InstanceOfCheckForException:UncaughtExceptionInterceptor.kt$UncaughtExceptionInterceptor$e is IOException</ID>
    <ID>LongMethod:ImageUtil.kt$ImageUtil$fun chooseBackground(context: Context, imageSource: BufferedSource): Drawable</ID>
    <ID>LoopWithTooManyJumpStatements:ImageUtil.kt$ImageUtil$for</ID>
    <ID>LoopWithTooManyJumpStatements:RateLimitInterceptor.kt$RateLimitInterceptor$while</ID>
    <ID>MagicNumber:CbzCrypto.kt$CbzCrypto$100</ID>
    <ID>MagicNumber:CbzCrypto.kt$CbzCrypto$128</ID>
    <ID>MagicNumber:CbzCrypto.kt$CbzCrypto$42</ID>
    <ID>MagicNumber:DeviceUtil.kt$DeviceUtil$1024</ID>
    <ID>MagicNumber:DeviceUtil.kt$DeviceUtil$3L</ID>
    <ID>MagicNumber:DeviceUtil.kt$DeviceUtil$90000</ID>
    <ID>MagicNumber:DiskUtil.kt$DiskUtil$240</ID>
    <ID>MagicNumber:Hash.kt$Hash$15</ID>
    <ID>MagicNumber:Hash.kt$Hash$240</ID>
    <ID>MagicNumber:Hash.kt$Hash$4</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$0.01</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$0.0275</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$100</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$14</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$16384</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$18</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$200</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$22</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$25</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$3</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$30</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$32</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$40</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$5</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$50</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$6</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$740</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$9</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$96</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$98</ID>
    <ID>MagicNumber:ImageUtil.kt$ImageUtil$99</ID>
    <ID>MagicNumber:NetworkHelper.kt$NetworkHelper$30</ID>
    <ID>MagicNumber:SecurityPreferences.kt$SecurityPreferences$0x7F</ID>
    <ID>MagicNumber:UniFileTempFileManager.kt$UniFileTempFileManager$3</ID>
    <ID>MagicNumber:UniFileTempFileManager.kt$UniFileTempFileManager$8192</ID>
    <ID>MagicNumber:WebViewInterceptor.kt$WebViewInterceptor$30</ID>
    <ID>MaxLineLength:CoroutinesExtensions.kt$*</ID>
    <ID>MaxLineLength:ImageUtil.kt$ImageUtil$fun</ID>
    <ID>MaxLineLength:SpecificHostRateLimitInterceptor.kt$*</ID>
    <ID>MaxLineLength:WebViewUtil.kt$WebViewUtil$*</ID>
    <ID>MaximumLineLength:ImageUtil.kt$ImageUtil$ </ID>
    <ID>NestedBlockDepth:ImageUtil.kt$ImageUtil$fun chooseBackground(context: Context, imageSource: BufferedSource): Drawable</ID>
    <ID>NestedBlockDepth:UniFileExtensions.kt$fun UniFile.unzip(destination: File, onlyCopyImages: Boolean = false)</ID>
    <ID>NestedBlockDepth:UniFileTempFileManager.kt$UniFileTempFileManager$fun createTempFile(file: UniFile): File</ID>
    <ID>ReturnCount:ImageUtil.kt$ImageUtil$fun chooseBackground(context: Context, imageSource: BufferedSource): Drawable</ID>
    <ID>ReturnCount:ImageUtil.kt$ImageUtil$fun splitTallImage( tmpDir: UniFile, imageFile: UniFile, filenamePrefix: String, ): Boolean</ID>
    <ID>ReturnCount:WebViewInterceptor.kt$WebViewInterceptor$@OptIn(DelicateCoroutinesApi::class) override fun intercept(chain: Interceptor.Chain): Response</ID>
    <ID>ReturnCount:WebViewInterceptor.kt$private fun isRequestHeaderSafe(_name: String, _value: String): Boolean</ID>
    <ID>SwallowedException:AndroidPreference.kt$AndroidPreference$e: ClassCastException</ID>
    <ID>SwallowedException:AndroidPreference.kt$AndroidPreference.Object$e: Exception</ID>
    <ID>SwallowedException:DeviceUtil.kt$DeviceUtil$e: Exception</ID>
    <ID>SwallowedException:EHNetworkLogging.kt$ex: Exception</ID>
    <ID>SwallowedException:ImageUtil.kt$ImageUtil$e: Exception</ID>
    <ID>SwallowedException:OkHttpExtensions.kt$ex: Throwable</ID>
    <ID>SwallowedException:PreferenceStore.kt$e: IllegalArgumentException</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:OkHttpExtensions.kt$Exception()</ID>
    <ID>TooGenericExceptionCaught:AndroidPreference.kt$AndroidPreference.Object$e: Exception</ID>
    <ID>TooGenericExceptionCaught:CloudflareInterceptor.kt$CloudflareInterceptor$e: Exception</ID>
    <ID>TooGenericExceptionCaught:DeviceUtil.kt$DeviceUtil$e: Exception</ID>
    <ID>TooGenericExceptionCaught:EHNetworkLogging.kt$ex: Exception</ID>
    <ID>TooGenericExceptionCaught:ImageUtil.kt$ImageUtil$e: Exception</ID>
    <ID>TooGenericExceptionCaught:OkHttpExtensions.kt$&lt;no name provided&gt;$e: Exception</ID>
    <ID>TooGenericExceptionCaught:OkHttpExtensions.kt$ex: Throwable</ID>
    <ID>TooGenericExceptionCaught:RxCoroutineBridge.kt$e: Throwable</ID>
    <ID>TooGenericExceptionCaught:UncaughtExceptionInterceptor.kt$UncaughtExceptionInterceptor$e: Exception</ID>
    <ID>TooGenericExceptionCaught:WebViewUtil.kt$WebViewUtil$e: Throwable</ID>
    <ID>TooManyFunctions:CbzCrypto.kt$CbzCrypto</ID>
    <ID>TooManyFunctions:DohProviders.kt$eu.kanade.tachiyomi.network.DohProviders.kt</ID>
    <ID>TooManyFunctions:EpubFile.kt$EpubFile : Closeable</ID>
    <ID>TooManyFunctions:ImageUtil.kt$ImageUtil</ID>
    <ID>TooManyFunctions:Logging.kt$exh.log.Logging.kt</ID>
    <ID>TooManyFunctions:SecurityPreferences.kt$SecurityPreferences</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$/** * Based on https://github.com/square/okhttp/blob/ef5d0c83f7bbd3a0c0534e7ca23cbc4ee7550f3b/okhttp-dnsoverhttps/src/test/java/okhttp3/dnsoverhttps/DohProviders.java */ const val PREF_DOH_CLOUDFLARE = 1</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_360 = 7</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_ADGUARD = 3</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_ALIDNS = 5</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_CONTROLD = 10</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_DNSPOD = 6</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_GOOGLE = 2</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_MULLVAD = 9</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_NJALLA = 11</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_QUAD101 = 8</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_QUAD9 = 4</ID>
    <ID>TopLevelPropertyNaming:DohProviders.kt$const val PREF_DOH_SHECAN = 12</ID>
  </CurrentIssues>
</SmellBaseline>
